# Copyright 2021 IBM Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ApiGenerateCodeResponse(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, script: str=None):  # noqa: E501
        """ApiGenerateCodeResponse - a model defined in Swagger

        :param script: The script of this ApiGenerateCodeResponse.  # noqa: E501
        :type script: str
        """
        self.swagger_types = {
            'script': str
        }

        self.attribute_map = {
            'script': 'script'
        }

        self._script = script

    @classmethod
    def from_dict(cls, dikt) -> 'ApiGenerateCodeResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The apiGenerateCodeResponse of this ApiGenerateCodeResponse.  # noqa: E501
        :rtype: ApiGenerateCodeResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def script(self) -> str:
        """Gets the script of this ApiGenerateCodeResponse.

        The script source code to run the component in a pipeline  # noqa: E501

        :return: The script of this ApiGenerateCodeResponse.
        :rtype: str
        """
        return self._script

    @script.setter
    def script(self, script: str):
        """Sets the script of this ApiGenerateCodeResponse.

        The script source code to run the component in a pipeline  # noqa: E501

        :param script: The script of this ApiGenerateCodeResponse.
        :type script: str
        """

        self._script = script
